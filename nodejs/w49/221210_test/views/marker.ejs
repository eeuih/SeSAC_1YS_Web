<html>
<head>
    <meta charset="utf-8">
    <title>위치 테스트</title>
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=8d2772601590f0ed140826adec58e8a1&libraries=services"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
    <div id="result"></div>

<script>

let finalTest = mapDrawer(); // 아래 함수 정의에서 리턴 받은 값을 finalTest 변수로 지정했다. 

// 그런데 프로미스 형태로 저장되어서 promise result를 뽑아내기 위해 아래 코드를 작성합니다..
const getData = () => {
  finalTest.then((appData) => {
    var map = appData;
    // 접속한 지도를 기준으로 멀 한다면.. 이 안에서 먼가를 실행해주어야 해용 .
    console.log(map);
  });
};

getData();



function getMyGps() {
    return new Promise((resolve, rejected) => {
        navigator.geolocation.getCurrentPosition(resolve, rejected);
    });
}

function setMapwithNewLatLng (newLatLng) {

    let mapContainer = document.getElementById('map');

    let initPosition = new kakao.maps.LatLng(newLatLng.userLat, newLatLng.userLng);
        let options = { center: initPosition, level: 6 };
        let map = new kakao.maps.Map(mapContainer, options);

        axios({ 
            method: "post", 
            url: "marker",

        }).then(function(res){
          
            var spotList = res.data; 

            for (i = 0; i < spotList.length; i++){ 
                var markerPosition  = new kakao.maps.LatLng(spotList[i].lat, spotList[i].lon); 
                var marker = new kakao.maps.Marker({ position: markerPosition });
                marker.setMap(map);
            }
        });

        return map; // 현재 접속 위치를 기준으로 한 지도를 map drawer 함수 내로 리턴한다. 
    }


async function mapDrawer() {
    let newLatLng = {};
    
    try {
        let position = await getMyGps();

        newLatLng.userLat = position.coords.latitude;
        newLatLng.userLng = position.coords.longitude;

        let test = setMapwithNewLatLng(newLatLng);
        return test; // setMapwithNewLatLng에서  리턴받은값을 또 리턴한다.. 

        
        } catch (err) {
            console.error(err.message);

            newLatLng.userLat = 36.366701;
            newLatLng.userLng = 127.344307;

            setMapwithNewLatLng(newLatLng);
        }       
    }


</script>
</body>
</html>